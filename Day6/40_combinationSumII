import java.util.*;

class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates,int target){
        Arrays.sort(candidates);
        List<List<Integer>> ans=new ArrayList<>();
        List<Integer> current=new ArrayList<>();
        combinations(candidates,target,0,current,ans);
        return ans;
    }
    public void combinations(int[] arr,int t,int idx,List<Integer> current,List<List<Integer>> ans){
        if(t==0){
            ans.add(new ArrayList<>(current));
            return;
        }
        if(t<0) return;
        for(int i=idx;i<arr.length;i++){
            if(i>idx&&arr[i]==arr[i-1]) continue;
            current.add(arr[i]);
            combinations(arr,t-arr[i],i+1,current,ans);
            current.remove(current.size()-1);
        }
    }
}
